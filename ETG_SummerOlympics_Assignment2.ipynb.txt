{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "ETG_SummerOlympics_Assignment2.ipynb",
      "provenance": [],
      "collapsed_sections": []
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "metadata": {
        "id": "bzOYqqWHQRpI"
      },
      "source": [
        "import pandas as pd \n",
        " \n",
        "import numpy as np"
      ],
      "execution_count": 139,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ISlw1L-Jvnep"
      },
      "source": [
        "**Summer Olympics Data Analysis Assignment**"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "v6fI_h6mtylS"
      },
      "source": [
        "**Importing the dataset from summer.csv file**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "f0yuhwXkQRvX",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e4fdc1fc-3e47-40f2-c7e3-7ed436d49114"
      },
      "source": [
        "df = pd.read_csv('summer.csv') \n",
        "print(df)\n",
        " \n",
        "#DataFrame format"
      ],
      "execution_count": 140,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "       Year    City      Sport  ... Gender                       Event   Medal\n",
            "0      1896  Athens   Aquatics  ...    Men              100M Freestyle    Gold\n",
            "1      1896  Athens   Aquatics  ...    Men              100M Freestyle  Silver\n",
            "2      1896  Athens   Aquatics  ...    Men  100M Freestyle For Sailors  Bronze\n",
            "3      1896  Athens   Aquatics  ...    Men  100M Freestyle For Sailors    Gold\n",
            "4      1896  Athens   Aquatics  ...    Men  100M Freestyle For Sailors  Silver\n",
            "...     ...     ...        ...  ...    ...                         ...     ...\n",
            "31160  2012  London  Wrestling  ...    Men                    Wg 84 KG  Bronze\n",
            "31161  2012  London  Wrestling  ...    Men                    Wg 96 KG    Gold\n",
            "31162  2012  London  Wrestling  ...    Men                    Wg 96 KG  Silver\n",
            "31163  2012  London  Wrestling  ...    Men                    Wg 96 KG  Bronze\n",
            "31164  2012  London  Wrestling  ...    Men                    Wg 96 KG  Bronze\n",
            "\n",
            "[31165 rows x 9 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "l77nwR_8yCcK",
        "outputId": "21f9249b-e37c-40e9-812c-0c31b9cf2cb1"
      },
      "source": [
        "df.isnull().sum()\n",
        "#no null values in the given dataset"
      ],
      "execution_count": 141,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Year          0\n",
              "City          0\n",
              "Sport         0\n",
              "Discipline    0\n",
              "Athlete       0\n",
              "Country       4\n",
              "Gender        0\n",
              "Event         0\n",
              "Medal         0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 141
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "i2HfqApkwcXj"
      },
      "source": [
        "**1. In how many cities Summer Olympics is held so far?**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "VMg9ueWFQR0v",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "042097c8-bc58-4365-c213-a249b8a1f7d8"
      },
      "source": [
        "\n",
        "print(\"So far in\", len(df['City'].unique()), \"cities Summer Olympics is held.\")"
      ],
      "execution_count": 142,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "So far in 22 cities Summer Olympics is held.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Lph2Hq7Ky-Ir"
      },
      "source": [
        "**2. Which sport is having most number of Gold Medals so far? (Top 5)**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "aM_jtTwa5nES",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 882
        },
        "outputId": "2a24f959-219c-4455-b7ec-e4c5b90340c8"
      },
      "source": [
        " \n",
        "lst1 = [] #Name of sports(repetitive also) corresponding to Gold Medal.\n",
        "data = df.values.tolist()\n",
        " \n",
        "for i in range(len(data)): \n",
        "  if(data[i][8] == 'Gold'):\n",
        "     lst1.append(data[i][2])\n",
        " \n",
        "#print(lst1)\n",
        " \n",
        "sets = set(lst1) #for finding unique names of sport.\n",
        "ulstS = list(sets) #conv. of above set to list for indexing.\n",
        "#print(ulstS)\n",
        " \n",
        "lst2 = [] #will consist the total number of Gold medals won by each sport.\n",
        "lst3 = [] #this list will've the name of the sport corresponding to the max number of gold medals earned.\n",
        " \n",
        "for i in range(len(ulstS)):\n",
        "  c = 0\n",
        "  for j in range(len(lst1)):\n",
        "     if(ulstS[i] == lst1[j]):\n",
        "         c = c + 1\n",
        "  #print(ulstS[i], c)\n",
        "  lst2.append(c)\n",
        "  lst3.append(ulstS[i])\n",
        " \n",
        "#conversion of list to dataframe to plot it using pandas .plot() function\n",
        " \n",
        "df1 = pd.DataFrame(list(zip(lst3, lst2)), columns =['Top 5 Sports', 'No of Gold Medals']) \n",
        "df2 = df1.sort_values(by = 'No of Gold Medals', ascending = False)\n",
        "print(df2.head(), '\\n\\n') #displays top 5 data.\n",
        "df3 = df2.head().plot(x = 'Top 5 Sports', y = 'No of Gold Medals', kind = 'bar')\n",
        " \n",
        "print(\"Hence, it's clear that Aquatics is having the most number of Gold medals.\\n\\n\\n\")"
      ],
      "execution_count": 143,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   Top 5 Sports  No of Gold Medals\n",
            "33     Aquatics               1421\n",
            "12    Athletics               1215\n",
            "6        Rowing                890\n",
            "29   Gymnastics                820\n",
            "31      Fencing                552 \n",
            "\n",
            "\n",
            "Hence, it's clear that Aquatics is having the most number of Gold medals.\n",
            "\n",
            "\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "_nPTGWaUzRfV"
      },
      "source": [
        "**3. Which sport is having most number of Medals so far? (Top 5)**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 882
        },
        "id": "YSMzkIOwC2Ct",
        "outputId": "0a7f66cd-deaf-486a-9f38-cc3c6a10dda0"
      },
      "source": [
        " \n",
        "lst1 = [] #Name of sport\n",
        "data = df.values.tolist()\n",
        " \n",
        "for i in range(len(data)):\n",
        "  lst1.append(data[i][2])\n",
        " \n",
        "sets = set(lst1) #for finding unique names of sport.\n",
        "ulstS = list(sets)\n",
        "#print (ulstS)\n",
        " \n",
        "lst2 = []\n",
        "lst3 = []\n",
        " \n",
        "for i in range(len(ulstS)):\n",
        "  c = 0\n",
        "  for j in range(len(lst1)):\n",
        "     if(ulstS[i] == lst1[j]):\n",
        "         c = c + 1\n",
        "  #print (ulstS[i], c)\n",
        " \n",
        "  lst2.append(c) \n",
        "  lst3.append(ulstS[i])\n",
        " \n",
        "#conversion of list to dataframe to plot it using pandas .plot() function\n",
        " \n",
        "df1 = pd.DataFrame(list(zip(lst3, lst2)), columns =['Top 5 Sports', 'No of Medals']) \n",
        "df2 = df1.sort_values(by = 'No of Medals', ascending = False)\n",
        "print(df2.head(), '\\n\\n')\n",
        "df3 = df2.head().plot(x = 'Top 5 Sports', y = 'No of Medals', kind = 'bar')\n",
        " \n",
        "print(\"Hence, it's clear that Aquatics is also having the most number of medals.\\n\\n\\n\")"
      ],
      "execution_count": 144,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   Top 5 Sports  No of Medals\n",
            "33     Aquatics          4170\n",
            "12    Athletics          3638\n",
            "6        Rowing          2667\n",
            "29   Gymnastics          2307\n",
            "31      Fencing          1613 \n",
            "\n",
            "\n",
            "Hence, it's clear that Aquatics is also having the most number of medals.\n",
            "\n",
            "\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "POogJ9HSzTJr"
      },
      "source": [
        "**4. Which player has won most number of medals? (Top 5)**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Fxqbx7zIcr1h",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 985
        },
        "outputId": "67a04a4c-15f2-46d5-f09b-8b6d39a6885d"
      },
      "source": [
        "#Takes around 50 seconds to load.\n",
        " \n",
        "lst1 = []\n",
        " \n",
        "for athlete in df['Athlete'].unique():\n",
        "   lst1.append([athlete, len(df[df['Athlete'] == athlete])])\n",
        " \n",
        "df1 = pd.DataFrame(lst1, columns = ['Top 5 Athletes','No of Medals'])\n",
        "df2 = df1.sort_values(by = 'No of Medals', ascending = False).head()\n",
        "print(df2)\n",
        "df3 = df2.head().plot(x = 'Top 5 Athletes', y = 'No of Medals', kind = 'bar')\n",
        " \n",
        "print(\"\\n\\n\\nHence, it's clear that PHELPS, Michael has the most number of medals.\\n\\n\\n\")"
      ],
      "execution_count": 145,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "             Top 5 Athletes  No of Medals\n",
            "18640       PHELPS, Michael            22\n",
            "7197       LATYNINA, Larisa            18\n",
            "9948     ANDRIANOV, Nikolay            15\n",
            "6591           ONO, Takashi            13\n",
            "5103   MANGIAROTTI, Edoardo            13\n",
            "\n",
            "\n",
            "\n",
            "Hence, it's clear that PHELPS, Michael has the most number of medals.\n",
            "\n",
            "\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "BJa2a7b3zTvr"
      },
      "source": [
        "**5. Which player has won most number of Gold Medals of medals? (Top 5)**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "ecDJs7XE9OF1",
        "outputId": "df8db598-1b8a-4221-92fa-a7e7e76c3a0a"
      },
      "source": [
        "lst1 = [] #will consist of all the names of athlete given in the data.\n",
        "data = df.values.tolist()\n",
        " \n",
        "for i in range(len(data)): \n",
        "  if(data[i][8] == 'Gold'):\n",
        "     lst1.append(data[i][4])\n",
        " \n",
        "sets = set(lst1) #for finding unique names of athlete.\n",
        "ulstA = list(sets) #conv. of above set to list for indexing.\n",
        " \n",
        "lst2 = [] #will consist the total number of Gold medals won by each Athlete.\n",
        "lst3 = [] #this list will've the name of the Athlete corresponding to the max number of gold medals earned.\n",
        "\n",
        "for i in range(len(ulstA)):\n",
        "  c = 0\n",
        "  for j in range(len(lst1)):\n",
        "     if(ulstA[i] == lst1[j]):\n",
        "         c = c + 1\n",
        "  lst2.append(c)\n",
        "  lst3.append(ulstA[i])\n",
        " \n",
        "#conversion of list to dataframe to plot it using pandas .plot() function\n",
        " \n",
        "df1 = pd.DataFrame(list(zip(lst3, lst2)), columns =['Top 5 Athletes', 'No of Gold Medals']) \n",
        "df2 = df1.sort_values(by = 'No of Gold Medals', ascending = False)\n",
        "print(df2.head(), '\\n\\n')\n",
        "df3 = df2.head().plot(x = 'Top 5 Athletes', y = 'No of Gold Medals', kind = 'bar')\n",
        " \n",
        "print(\"\\n\\n\\nPHELPS, Michael is also having the most number of Gold medals.\\n\\n\\n\")"
      ],
      "execution_count": 146,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "        Top 5 Athletes  No of Gold Medals\n",
            "6467   PHELPS, Michael                 18\n",
            "7466       LEWIS, Carl                  9\n",
            "7677      NURMI, Paavo                  9\n",
            "6448  LATYNINA, Larisa                  9\n",
            "6111       SPITZ, Mark                  9 \n",
            "\n",
            "\n",
            "\n",
            "\n",
            "\n",
            "PHELPS, Michael is also having the most number of Gold medals.\n",
            "\n",
            "\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "AN2v1pTcQuxF"
      },
      "source": [
        " **6. In which year India won first Gold Medal in Summer Olympics?**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kxSLtCaXQ_cX",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "510c028d-8401-4377-f882-856e03861768"
      },
      "source": [
        " \n",
        "lst1 = [] #consists each and every year.\n",
        "data = df.values.tolist()\n",
        " \n",
        "for i in range(len(data)): \n",
        "  if(data[i][8] == 'Gold'):\n",
        "     lst1.append(data[i][0])\n",
        " \n",
        "sets = set(lst1) #for finding unique year\n",
        "ulstY = list(sets) #conv. of above set to list for indexing.\n",
        " \n",
        "df1 = pd.DataFrame(list(ulstY), columns =['Year(Gold medal received)']) \n",
        "df2 = df1.sort_values(by = 'Year(Gold medal received)', ascending = True)\n",
        "print(df2.head(), '\\n\\n')\n",
        " \n",
        "print(\"\\n\\n\\nHence, 1896 is the year in which India won first Gold medal in summer olympics.\\n\\n\\n\")"
      ],
      "execution_count": 147,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "    Year(Gold medal received)\n",
            "22                       1896\n",
            "23                       1900\n",
            "24                       1904\n",
            "25                       1908\n",
            "26                       1912 \n",
            "\n",
            "\n",
            "\n",
            "\n",
            "\n",
            "Hence, 1896 is the year in which India won first Gold medal in summer olympics.\n",
            "\n",
            "\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "2ws_Rny-zUyy"
      },
      "source": [
        "**7. Which event is most popular in terms of number of players?(Top 5)**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "UicIBRXLzVDZ",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 769
        },
        "outputId": "3b8aa51f-1d4c-4b7c-b86d-f2943fb5e23b"
      },
      "source": [
        "lst1 = [] #consists each and every event of sports given in the data.\n",
        "data = df.values.tolist()\n",
        " \n",
        "for i in range(len(data)):\n",
        "  lst1.append(data[i][7])\n",
        " \n",
        "set1 = set(lst1) #for finding unique names of events.\n",
        "ulstE = list(set1) #ulstE is the list of unique names of events\n",
        " \n",
        "lst2 = [] #will've no. of players \n",
        "lst3 = [] #will've name of event corresponding to the total no. of players or athletes.\n",
        " \n",
        "for i in range(len(ulstE)):\n",
        "  c = 0\n",
        "  for j in range(len(lst1)):\n",
        "     if(ulstE[i] == lst1[j]):\n",
        "         c = c + 1\n",
        "  #print(ulstE[i], c)\n",
        " \n",
        "  lst2.append(c) \n",
        "  lst3.append(ulstE[i])\n",
        " \n",
        "#conversion of list to dataframe to plot it using pandas .plot() function\n",
        " \n",
        "df1 = pd.DataFrame(list(zip(lst3, lst2)), columns =['Top 5 Events', 'No of Athletes']) \n",
        "df2 = df1.sort_values(by = 'No of Athletes', ascending = False)\n",
        "print(df2.head(), '\\n\\n')\n",
        "df3 = df2.head().plot(x = 'Top 5 Events', y = 'No of Athletes', kind = 'bar')\n",
        " \n",
        "print(\"Hence, it's clear that Football is most popular in terms of players.\\n\\n\\n\")"
      ],
      "execution_count": 148,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "         Top 5 Events  No of Athletes\n",
            "287          Football            1497\n",
            "61             Hockey            1422\n",
            "78   Team Competition            1147\n",
            "484        Basketball            1012\n",
            "366          Handball             973 \n",
            "\n",
            "\n",
            "Hence, it's clear that Football is most popular in terms of players.\n",
            "\n",
            "\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAX0AAAFWCAYAAACFEk2kAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAgAElEQVR4nO3dfbhVZZ3/8fdHQEBTUTmaigZjaokRImNUmqkjalJwjeTDoKAyw9WMIzr6uwztQctRcbJ0tMbG8rFh0EIdMW2KfLY0BSEUzSRFhdE4ogKWGOj398e6D2wP53kf9trH+/O6rn3tve611t7fszl8ztr3vte9FBGYmVkeNiu7ADMzqx2HvplZRhz6ZmYZceibmWXEoW9mlpHeZRfQloEDB8bgwYPLLsPMrEeZN2/eqxHR0NK6ug79wYMHM3fu3LLLMDPrUSS90No6d++YmWXEoW9mlhGHvplZRuq6T9/MyrN27VqWLl3KmjVryi7FWtGvXz8GDRpEnz59OryPQ9/MWrR06VK22morBg8ejKSyy7FmIoIVK1awdOlShgwZ0uH93L1jZi1as2YN22+/vQO/Tkli++237/QnMYe+mbXKgV/fuvLv49A3M8uI+/TNrEMGT7uzW59vyfSj2t1GEmeeeSbf/va3Abj00kt58803Of/886t67bfffpujjjqKV199lXPOOYdjjz32PevXrVvHTjvtxOTJk5k+ffr69osuuohzzz23qH/JEsaMGcOTTz650fOfdNJJjBkzhvHjx7daw/XXX8/o0aPZeeedq/pZOut9H/rd/YvaVR35BTez9+rbty+33nor55xzDgMHDuy2550/fz4ACxYsaHH9nDlz2HPPPfnJT37CxRdfvL4bpTL0q3X99dezzz771Dz03b1jZnWrd+/eTJkyhcsuu2yjdUuWLOGQQw5h2LBhHHroobz44osbbfPaa68xbtw4hg0bxqhRo1i4cCHLly/nhBNO4LHHHmP48OH84Q9/2Gi/mTNncvrpp7Pbbrvx8MMPAzBt2jTeeusthg8fzoQJEwB45513+Id/+AeGDh3K6NGjeeuttzZ6rnnz5nHQQQex3377cfjhh/Pyyy8za9Ys5s6dy4QJExg+fDhvvfVWi9sBXHHFFey9994MGzaM4447rqr3Exz6ZlbnTj31VGbMmMHKlSvf037aaacxadIkFi5cyIQJE5g6depG+5533nnsu+++LFy4kIsuuoiJEyeyww478MMf/pADDzyQBQsWsPvuu79nnzVr1vDLX/6Sz3/+8xx//PHMnDkTgOnTp9O/f38WLFjAjBkzAHj22Wc59dRTWbRoEQMGDOCWW255z3OtXbuW0047jVmzZjFv3jxOOeUUvvKVrzB+/HhGjhzJjBkzWLBgAb17925xu6bXnT9/PgsXLuT73/9+1e/n+757x8x6tq233pqJEydyxRVX0L9///XtDz/8MLfeeisAJ554ImefffZG+z700EPrg/iQQw5hxYoVrFq1qs3X++lPf8rBBx9M//79Ofroo7ngggu4/PLL6dWr10bbDhkyhOHDhwOw3377sWTJkvesf+aZZ3jyySc57LDDgOKTwU477bTR87S13bBhw5gwYQLjxo1j3LhxbdbeEQ59M6t7Z5xxBiNGjODkk0/e5K81c+ZMHnroIZqmdV+xYgX33HPP+kCu1Ldv3/WPe/XqtVH3TkQwdOjQ9V1ErWlruzvvvJMHHniAO+64gwsvvJAnnniC3r27Ht3u3jGzurfddttxzDHHcM0116xv+9SnPsVNN90EwIwZMzjwwAM32u/AAw9c3xVz3333MXDgQLbeeutWX2fVqlU8+OCDvPjiiyxZsoQlS5bwve99b30XT58+fVi7dm2H695rr71obGxcH+Zr165l0aJFAGy11VasXr26ze3effddXnrpJQ4++GAuueQSVq5cyZtvvtnh12+Jj/TNrEPKHoF21lln8d3vfnf98pVXXsnJJ5/Mt771LRoaGrjuuus22uf888/nlFNOYdiwYWyxxRbccMMNbb7GbbfdxiGHHPKeI/ixY8dy9tln8/bbbzNlyhSGDRvGiBEjuPDCC9utefPNN2fWrFlMnTqVlStXsm7dOs444wyGDh3KSSedxJe+9CX69+/Pww8/3OJ2e+65JyeccAIrV64kIpg6dSoDBgzoxLu2MUVEVU+wKY0cOTKqvYiKh2yadc3TTz/NRz/60bLLsHa09O8kaV5EjGxpe3fvmJllxKFvZpaRdvv0JV0LjAGWR8Q+zdadBVwKNETEqypOW/t34HPAn4GTIuLxtO0k4Ktp13+NiLY716zbuavLOisiPOlaHetK93xHjvSvB45o3ihpV2A0UHka3JHAHuk2BbgqbbsdcB7w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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ffuzOWjL-VAm"
      },
      "source": [
        "**8. Which sport is having most female Gold medalists?(Top 5)**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 738
        },
        "id": "dOByeOCJDFtB",
        "outputId": "a5c16347-8f71-4b03-a058-2e163514653e"
      },
      "source": [
        "lst1 = [] #Sport name\n",
        "data = df.values.tolist()\n",
        " \n",
        "for i in range(len(data)): \n",
        "  if(data[i][6] == 'Women'):\n",
        "     lst1.append(data[i][2])\n",
        " \n",
        "sets = set(lst1) #for finding unique names of sport.\n",
        "ulstS = list(sets) #conv. of above set to list for indexing\n",
        " \n",
        "lst2 = [] #No of female gold medalists.\n",
        "lst3 = [] #Name of sport corresponding to female gold medalists.\n",
        " \n",
        "for i in range(len(ulstS)):\n",
        "  c = 0\n",
        "  for j in range(len(lst1)):\n",
        "     if(ulstS[i] == lst1[j]):\n",
        "         c = c + 1\n",
        "  lst2.append(c)\n",
        "  lst3.append(ulstS[i])\n",
        " \n",
        "df1 = pd.DataFrame(list(zip(lst3, lst2)), columns =['Top 5 Sports', 'No of Female Gold Medalist']) \n",
        "df2 = df1.sort_values(by = 'No of Female Gold Medalist', ascending = False)\n",
        "print(df2.head(), '\\n\\n')\n",
        "df3 = df2.head().plot(x = 'Top 5 Sports', y = 'No of Female Gold Medalist', kind = 'bar')\n",
        " \n",
        "print(\"It implies that Aquatics is having the most number of female Gold medalists.\\n\\n\\n\")"
      ],
      "execution_count": 149,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   Top 5 Sports  No of Female Gold Medalist\n",
            "22     Aquatics                        1726\n",
            "7     Athletics                        1163\n",
            "18   Gymnastics                         799\n",
            "4        Rowing                         651\n",
            "16   Volleyball                         497 \n",
            "\n",
            "\n",
            "It implies that Aquatics is having the most number of female Gold medalists.\n",
            "\n",
            "\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    }
  ]
}